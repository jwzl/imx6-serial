diff --git a/include/configs/mx6rom7421.h b/include/configs/mx6rom7421.h
index 6ad21db..0bbd29e 100644
--- a/include/configs/mx6rom7421.h
+++ b/include/configs/mx6rom7421.h
@@ -20,7 +20,7 @@
 #define CONFIG_SPL_MMC_SUPPORT
 #include "imx6_spl_advantech.h"
 #endif
-
+/* #define DEBUG  */ 
 #define CONFIG_MACH_TYPE	3980
 #define CONFIG_MXC_UART_BASE	UART1_BASE
 #define CONFIG_CONSOLE_DEV		"ttymxc0"
@@ -125,6 +125,27 @@
 #endif /* CONFIG_SPLASH_SCREEN && CONFIG_MXC_EPDC */
 #endif
 
+#define CONFIG_UBOOT_LOGO_ENABLE
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+
+	#define CONFIG_FB_BASE	(CONFIG_SYS_TEXT_BASE + 0x1000000)
+	#define UBOOT_LOGO_BMP_ADDR 0x00100000
+
+	#define CONFIG_IMX_PWM
+	#define IMX_PWM1_BASE	 PWM1_BASE_ADDR
+	#define IMX_PWM2_BASE	 PWM2_BASE_ADDR
+
+#ifdef CONFIG_MX6DL
+	#define CONFIG_IPUV3_CLK 270000000
+#else
+	#define CONFIG_IPUV3_CLK 264000000
+#endif
+	/* #define LVDS_CLOCK_SRC_PLL5 */
+	#define DI_CLOCK_EXTERNAL_MODE  /* When clock external mode was defined, the DI clock root will be PLL5, without this macro, the DI root clock is IPU internal clock. */
+	#define CONFIG_IMX_HDMI
+#endif  /* CONFIG_UBOOT_LOGO_ENABLE */
+
 #define CONFIG_SUPPORT_LVDS
 #ifdef CONFIG_SUPPORT_LVDS
 #define IOMUX_LCD_BKLT_PWM 	MX6_PAD_SD1_DAT3__GPIO1_IO21
diff --git a/board/freescale/mx6advantech/mx6advantech.c b/board/freescale/mx6advantech/mx6advantech.c
index eda2200..9901c8b 100755
--- a/board/freescale/mx6advantech/mx6advantech.c
+++ b/board/freescale/mx6advantech/mx6advantech.c
@@ -56,6 +56,11 @@
 #include <imx_spi.h>
 #endif
 
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+#include <asm/imx-common/imx_pwm.h>
+#include <asm/imx-common/mxc_ipu.h>
+#endif
+
 
 DECLARE_GLOBAL_DATA_PTR;
 
@@ -890,6 +895,41 @@ static void setup_display(void)
 }
 #endif /* CONFIG_VIDEO_IPUV3 */
 
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+#ifdef IPU_OUTPUT_MODE_LVDS
+#ifndef CONFIG_ADVANTECH
+static void setup_lvds_iomux(void)
+{
+	struct pwm_device pwm = {
+		.pwm_id = 0,
+		.pwmo_invert = 0,
+	};
+
+	imx_pwm_config(pwm, 25000, 50000);
+	imx_pwm_enable(pwm);
+
+	/* GPIO backlight */
+	imx_iomux_v3_setup_pad(MX6_PAD_SD1_DAT3__PWM1_OUT | MUX_PAD_CTRL(NO_PAD_CTRL));
+	/* LVDS panel CABC_EN */
+	imx_iomux_v3_setup_pad(MX6_PAD_NANDF_CS2__GPIO6_IO15 | MUX_PAD_CTRL(NO_PAD_CTRL));
+	imx_iomux_v3_setup_pad(MX6_PAD_NANDF_CS3__GPIO6_IO16 | MUX_PAD_CTRL(NO_PAD_CTRL));
+
+	/*
+	 * Set LVDS panel CABC_EN to low to disable
+	 * CABC function. This function will turn backlight
+	 * automatically according to display content, so
+	 * simply disable it to get rid of annoying unstable
+	 * backlight phenomena.
+	 */
+	gpio_direction_output(IMX_GPIO_NR(6, 15), 0);
+	gpio_direction_output(IMX_GPIO_NR(6, 16), 0);
+}
+#endif /* CONFIG_ADVANTECH*/
+#endif /* IPU_OUTPUT_MODE_LVDS */
+#endif /* CONFIG_UBOOT_LOGO_ENABLE */
+
+
 /*
  * Do not overwrite the console
  * Use always serial for U-Boot console
@@ -994,26 +1034,49 @@ int board_early_init_f(void)
 #if defined (CONFIG_ADVANTECH) && defined(CONFIG_SUPPORT_LVDS)
 void setup_lvds_init(void)
 {
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	imx_iomux_v3_setup_pad(IOMUX_LCD_BKLT_PWM | MUX_PAD_CTRL(NO_PAD_CTRL)); /* LCD_BKLT_PWM */
+	imx_iomux_v3_setup_pad(IOMUX_LCD_BKLT_EN | MUX_PAD_CTRL(NO_PAD_CTRL)); /* LCD_BKLT_EN */
+	imx_iomux_v3_setup_pad(IOMUX_LCD_VDD_EN | MUX_PAD_CTRL(NO_PAD_CTRL)); /* LCD_VDD_EN */
+
+#else
 	imx_iomux_v3_setup_pad(IOMUX_LCD_BKLT_PWM); /* LCD_BKLT_PWM */
 	imx_iomux_v3_setup_pad(IOMUX_LCD_BKLT_EN); /* LCD_BKLT_EN */
 	imx_iomux_v3_setup_pad(IOMUX_LCD_VDD_EN); /* LCD_VDD_EN */
+#endif
 
 	/* LCD_BKLT_PWM - disable pwm */
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	gpio_direction_output(LCD_BKLT_PWM, 1);
+#else
 	gpio_direction_output(LCD_BKLT_PWM, 0);
+#endif
+
 
 	/* LCD_BKLT_EN - disable backlight */
 #ifdef LCD_BKLT_EN_VALUE
 	gpio_direction_output(LCD_BKLT_EN, LCD_BKLT_EN_VALUE);
 #else
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	gpio_direction_output(LCD_BKLT_EN, 1);
+#else
 	gpio_direction_output(LCD_BKLT_EN, 0);
 #endif
+#endif /* LCD_BKLT_EN_VALUE */
+
 
 	/* LCD_VDD_EN - disable VDD */
 #ifdef LCD_VDD_EN_VALUE
 		gpio_direction_output(LCD_VDD_EN, LCD_VDD_EN_VALUE);
 #else
+
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	gpio_direction_output(LCD_VDD_EN, 1);
+#else
 	gpio_direction_output(LCD_VDD_EN, 0);
 #endif
+#endif
 }
 
 #endif
@@ -1049,6 +1112,7 @@ int board_init(void)
 static struct pmic *pfuze;
 int power_init_board(void)
 {
+	
 	unsigned int reg, ret;
 
 	pfuze = pfuze_common_init(I2C_PMIC);
@@ -1252,6 +1316,11 @@ static const struct boot_mode board_boot_modes[] = {
 
 int board_late_init(void)
 {
+#ifdef CONFIG_UBOOT_LOGO_ENABLE
+	mxc_display_logo();
+#endif //CONFIG_UBOOT_LOGO_ENABLE
+
+
 #ifdef CONFIG_CMD_BMODE
 	add_board_boot_modes(board_boot_modes);
 #endif
